// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using System.Reflection.Emit;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241025034013_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Domain.Entities.Enrollment", b =>
            {
                b.Property<int>("EnrollmentId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("ClientId")
                    .HasColumnType("INTEGER");

                b.Property<int>("SubjectId")
                    .HasColumnType("INTEGER");

                b.HasKey("EnrollmentId");

                b.HasIndex("ClientId");

                b.HasIndex("SubjectId");

                b.ToTable("Enrollments");
            });

            modelBuilder.Entity("Domain.Entities.Subject", b =>
            {
                b.Property<int>("SubjectId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(200)");

                b.Property<int>("ProfessorId")
                    .HasColumnType("INTEGER");

                b.Property<string>("Title")
                    .HasColumnType("nvarchar(100)");

                b.HasKey("SubjectId");

                b.HasIndex("ProfessorId");

                b.ToTable("Subjects");
            });

            modelBuilder.Entity("Domain.Entities.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Discriminator")
                    .IsRequired()
                    .HasMaxLength(13)
                    .HasColumnType("TEXT");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("nvarchar(20)");

                b.Property<string>("Role")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("UserName")
                    .IsRequired()
                    .HasColumnType("nvarchar(20)");

                b.HasKey("Id");

                b.ToTable("Users");

                b.HasDiscriminator().HasValue("User");

                b.UseTphMappingStrategy();
            });

            modelBuilder.Entity("Domain.Entities.Admin", b =>
            {
                b.HasBaseType("Domain.Entities.User");

                b.HasDiscriminator().HasValue("Admin");
            });

            modelBuilder.Entity("Domain.Entities.Client", b =>
            {
                b.HasBaseType("Domain.Entities.User");

                b.HasDiscriminator().HasValue("Client");
            });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
            {
                b.HasBaseType("Domain.Entities.User");

                b.HasDiscriminator().HasValue("Professor");
            });

            modelBuilder.Entity("Domain.Entities.Enrollment", b =>
            {
                b.HasOne("Domain.Entities.Client", "Client")
                    .WithMany("Enrollments")
                    .HasForeignKey("ClientId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.HasOne("Domain.Entities.Subject", "Subject")
                    .WithMany("Enrollments")
                    .HasForeignKey("SubjectId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("Client");

                b.Navigation("Subject");
            });

            modelBuilder.Entity("Domain.Entities.Subject", b =>
            {
                b.HasOne("Domain.Entities.Professor", "Professor")
                    .WithMany("Subjects")
                    .HasForeignKey("ProfessorId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("Professor");
            });

            modelBuilder.Entity("Domain.Entities.Subject", b =>
            {
                b.Navigation("Enrollments");
            });

            modelBuilder.Entity("Domain.Entities.Client", b =>
            {
                b.Navigation("Enrollments");
            });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
            {
                b.Navigation("Subjects");
            });
#pragma warning restore 612, 618
        }
    }
}
